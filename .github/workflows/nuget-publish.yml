name: Publish NuGet Package

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'sparrow-cert/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8'

      - name: List Git tags for debugging
        run: git tag

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$TAG" >> $GITHUB_ENV

      - name: Calculate new version
        id: calc_version
        run: |
          TAG=${{ env.tag }}
          echo "Latest Tag: $TAG"
          VERSION=${TAG#v} # Remove the 'v' prefix if exists
          IFS='.' read -r -a PARTS <<< "$VERSION"
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=${PARTS[2]}
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "New Version: $NEW_VERSION"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release --no-restore /p:Version=${{ env.new_version }}

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal

      - name: Pack the NuGet package
        run: dotnet pack --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{ env.new_version }} /p:PackageReadmeFile=README.md

      - name: Publish to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Create new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_TAG="v${{ env.new_version }}"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag $NEW_TAG
          git push origin $NEW_TAG